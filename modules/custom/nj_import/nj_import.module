<?php

/**
 * @file
 * NJImport hook implementations.
 */

use Drupal\Component\Render\FormattableMarkup;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\nj_import\Entity\Import;

/**
 * Implements hook_file_download().
 */
function nj_import_file_download($uri) {
  // Get the file record based on the URI. If not in the database just return.
  /** @var \Drupal\file\FileInterface[] $files */
  $files = \Drupal::entityTypeManager()
    ->getStorage('file')
    ->loadByProperties(['uri' => $uri]);

  foreach ($files as $item) {
    // Since some database servers sometimes use a case-insensitive comparison
    // by default, double check that the filename is an exact match.
    if ($item->getFileUri() === $uri) {
      $file = $item;
      break;
    }
  }

  if (!isset($file)) {
    return;
  }

  // Check if this file belongs to NJImport.
  $usage = \Drupal::service('file.usage')->listUsage($file);
  if (!isset($usage['nj_import'])) {
    return;
  }

  $nj_import = \Drupal::entityTypeManager()
    ->getStorage('nj_import_import')
    ->loadByProperties(['source' => $uri]);

  foreach ($nj_import as $import) {
    if ($import->getSource() === $uri && $import->access('import')) {
      return file_get_content_headers($file);
    }
  }

  return -1;
}


/**
 * Implements hook_menu_links_discovered_alter().
 */
function nj_import_menu_links_discovered_alter(&$links) {
  // Add "Mapping" link for each import type.
  foreach (\Drupal::entityTypeManager()->getStorage('nj_import_import_type')->loadMultiple() as $machine_name => $bundle) {
    $links['entity.nj_import_import_type.mapping' . $machine_name] = [
      'title' => t('Mapping'),
      'route_name' => 'entity.nj_import_import_type.mapping',
      'menu_name' => 'admin',
      'parent' => 'entity.nj_import_import_type.edit_form.' . $machine_name,
      'route_parameters' => ['nj_import_import_type' => $machine_name],
      'weight' => -1,
    ];
  }
}
